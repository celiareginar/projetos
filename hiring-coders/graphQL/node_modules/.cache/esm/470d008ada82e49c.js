let createServer,readFile,resolve,parse;_da8‍.w("http",[["createServer",["createServer"],function(v){createServer=v}]]);_da8‍.w("fs",[["readFile",["readFile"],function(v){readFile=v}]]);_da8‍.w("path",[["resolve",["resolve"],function(v){resolve=v}]]);_da8‍.w("querystring",[["parse",["parse"],function(v){parse=v}]]);




const server = createServer((request, response) => {
    switch (request.url) {

        case '/status': {
            response.writeHead(200, {
                'Content-Type': 'application/json',
            });
            response.write(
                JSON.stringify({
                    status: 'OKAY'
                })
            );
            response.end();
            break;
        }

        case '/sign-in': {
            const path = resolve (__dirname,'./pages/sign-in.html');

            readFile(path, (error, files) =>{
                if (error){
                    response.writeHead(500, "Can't process HTML file");
                    response.end();
                    return;
                }
                response.writeHead(200);
                response.write(file);
                response.end();
            });
            break;
        }

        case '/authenticate': {
            let data = '';
            request.on('data', (chunk) =>{
                data += chunk;
            });

            response.on('end', () => {
                _da8‍.g.console.log(parse(data));
                response.writeHead(200);
                response.end();
            });
            break;
        }
        default: {
            response.writeHead(404, 'Service not found.');
            response.end();
        }
    }
});

const PORT = process.env.PORT ? parseInt(process.env.PORT) : 8000;
const HOSTNAME = process.env.HOSTNAME || '127.0.0.1';

server.listen(PORT, '127.0.0.1', () => {
    console.log(`Server is listeing at http://127.0.0.1:${PORT}`);
});

